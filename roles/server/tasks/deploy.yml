---
- name: Creates directory
  file:
    path: /mon_volume/prometheus
    state: directory
    owner: root
    group: root
    mode: 0775
    recurse: yes

- name: Create prometheus config
  template:
    src: prometheus.yml.j2
    dest: /mon_volume/prometheus/prometheus.yml

- name: check if prometheus_data exists
  command: docker volume inspect prometheus_data
  register: prometheus_data_exists
  failed_when: false

- name: create prometheus_data
  command: docker volume create --name prometheus_data
  when: prometheus_data_exists.failed

- name: check if grafana_data exists
  command: docker volume inspect grafana_data
  register: grafana_data_exists
  failed_when: false

- name: create grafana_data
  command: docker volume create --name grafana_data
  when: grafana_data_exists.failed

- name: Create cadvisor
  docker_container:
    name: cadvisor
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    state: started
    recreate: yes
    restart_policy: always
    exposed_ports:
      - 8080
    ports:
      - "8080:8080"

- name: Create ceph_exporter
  docker_container:
    name: ceph_exporter
    image: digitalocean/ceph_exporter
    volumes:
      - "{{ ceph_conf }}:/etc/ceph"
    state: started
    recreate: yes
    restart_policy: always
    exposed_ports:
      - 9128
    ports:
      - "{{ (ansible_all_ipv4_addresses | ipaddr(listen_cidr))[0] }}:9128:9128"
  when:
    - enable_ceph


- name: Create prometheus
  docker_container:
    name: prometheus
    image: prom/prometheus
    volumes:
      - /mon_volume/prometheus:/etc/prometheus
    state: started
    recreate: yes
    restart_policy: always
    exposed_ports:
      - "9090"
    ports:
      - "{{ (ansible_all_ipv4_addresses | ipaddr(listen_cidr))[0] }}:9090:9090"

- name: Create node-exporter
  docker_container:
    name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    state: started
    recreate: yes
    restart_policy: always
    exposed_ports:
      - "9100"
    ports:
      - "{{ (ansible_all_ipv4_addresses | ipaddr(listen_cidr))[0] }}:9100:9100"

- name: Create grafana
  docker_container:
    name: grafana
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    state: started
    recreate: yes
    restart_policy: always
    ports:
      - "{{ (ansible_all_ipv4_addresses | ipaddr(listen_cidr))[0] }}:3000:3000"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_passowrd }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
